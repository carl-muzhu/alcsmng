<?xml version="1.0" encoding="GB2312" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>yylc-gen-dal</tt>, a DAL (Data Access Layer)    -->
<!-- code generation utility specially developed for <tt>yylc</tt> project.        -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>yylc-gen-dal</tt> to generate this file.                                  -->
<!--                                                                               -->
<!-- @author qiang.wq                                                              -->
<!-- ============================================================================= -->

<sqlMap namespace="yylc">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table alcs_user_info -->
    <resultMap id="RM-USER-INFO" class="com.yylc.alcsmng.common.dal.dataobject.UserInfoDO">
		<result property="userId" column="user_id"  javaType="int" jdbcType="INT"  nullValue="0"/>
		<result property="account" column="account"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="password" column="password"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="userName" column="user_name"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="deptCode" column="dept_code"  javaType="int" jdbcType="INT"  nullValue="0"/>
		<result property="locationCode" column="location_code"  javaType="int" jdbcType="INT"  nullValue="0"/>
		<result property="userType" column="user_type"  javaType="int" jdbcType="INT"  nullValue="0"/>
		<result property="extension" column="extension"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="remark" column="remark"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="createTime" column="create_time"  javaType="java.util.Date" jdbcType="DATETIME" />
		<result property="updateTime" column="update_time"  javaType="java.util.Date" jdbcType="DATETIME" />
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisUserInfoDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisUserInfoDAO.saveUserInfo -->
    <insert id="MS-USER-INFO-SAVE-USER-INFO">
    <![CDATA[
        insert into alcs_user_info(user_id,user_id,password,user_name,dept_id,user_type,extension,remark,create_time,update_time) values (#userId#, #userId2#, #password#, #userName#, #deptId#, #userType#, #extension#, #remark#, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
    ]]>
	<selectKey resultClass="int" keyProperty="userId">
       select last_insert_id() as userId
    </selectKey>
    </insert>

    <!-- mapped statement for IbatisUserInfoDAO.queryUserByUserId -->
    <select id="MS-USER-INFO-QUERY-USER-BY-USER-ID" resultMap="RM-USER-INFO">
    <![CDATA[
        select * from alcs_user_info where (user_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisUserInfoDAO.queryUserByAccount -->
    <select id="MS-USER-INFO-QUERY-USER-BY-ACCOUNT" resultMap="RM-USER-INFO">
    <![CDATA[
        select * from alcs_user_info where (account = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisUserInfoDAO.queryUserByUserIdList -->
    <select id="MS-USER-INFO-QUERY-USER-BY-USER-ID-LIST" resultMap="RM-USER-INFO">
        select
        *
        FROM alcs_user_info
        where user_id in
        <iterate property="userIdList" open="(" close=")" conjunction=",">
        #userIdList[]#
        </iterate>
        ORDER BY user_id DESC
    </select>

    <!-- mapped statement for IbatisUserInfoDAO.queryUserByLocationCode -->
    <select id="MS-USER-INFO-QUERY-USER-BY-LOCATION-CODE" resultMap="RM-USER-INFO">
        select * from alcs_user_info where location_code=#locationCode# order by create_time desc
    </select>

    <!-- mapped statement for IbatisUserInfoDAO.queryAllUserInfo -->
    <select id="MS-USER-INFO-QUERY-ALL-USER-INFO" resultMap="RM-USER-INFO">
    <![CDATA[
        select * from alcs_user_info
    ]]>
    </select>

    <!-- mapped statement for IbatisUserInfoDAO.selectForPageCount -->
    <select id="MS-USER-INFO-SELECT-FOR-PAGE-COUNT" resultClass="int">
    <![CDATA[
        select COUNT(1) from alcs_user_info
    ]]>
    </select>

    <!-- mapped statement for IbatisUserInfoDAO.listForPage -->
    <select id="MS-USER-INFO-LIST-FOR-PAGE" resultMap="RM-USER-INFO">
        select
				*
			 FROM alcs_user_info

				ORDER BY create_time DESC LIMIT #offset#,#limit#
    </select>

    <!-- mapped statement for IbatisUserInfoDAO.deleteByUserId -->
    <delete id="MS-USER-INFO-DELETE-BY-USER-ID">
    <![CDATA[
        delete from alcs_user_info where (user_id = #value#)
    ]]>
    </delete>

</sqlMap>